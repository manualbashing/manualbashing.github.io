<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure on ManualBashing</title><link>https://manualbashing.github.io/tags/azure/</link><description>Recent content in Azure on ManualBashing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 10 Mar 2023 11:45:00 +0100</lastBuildDate><atom:link href="https://manualbashing.github.io/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>A new preferred way to call listKeys() in bicep</title><link>https://manualbashing.github.io/posts/a-new-preferred-way-to-call-listkeys-in-bicep/</link><pubDate>Fri, 10 Mar 2023 11:45:00 +0100</pubDate><guid>https://manualbashing.github.io/posts/a-new-preferred-way-to-call-listkeys-in-bicep/</guid><description>&lt;p>After upgrading to &lt;code>Bicep CLI version 0.15.31 (3ba6e06a8d)&lt;/code> I got a linter warning in one of my bicep files:&lt;/p>
&lt;blockquote>
&lt;p>Use a resource reference instead of invoking function &amp;ldquo;listKeys&amp;rdquo;. This simplifies the syntax and allows Bicep to better understand your deployment dependency graph.bicep core &lt;a href="https://aka.ms/bicep/linter/use-resource-symbol-reference">https://aka.ms/bicep/linter/use-resource-symbol-reference&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>The offensive line was where I am reading the access key from a log analytics workspace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="">listKeys(logAnalyticsWorkspace.id,&lt;/span> &lt;span style="">logAnalyticsWorkspace.apiVersion).primarySharedKey&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unfortunately the URL in the linter message did not resolve to any help page but redirected me to bing instead.&lt;/p>
&lt;p>So I tried my best guess as to what the linter tried to tell me and I got lucky:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="">logAnalyticsWorkspace.listKeys().primarySharedKey&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://gist.github.com/manualbashing/f7e6a388e4089f93063232c2927bb8e4">primarySharedKeyNew.bicep&lt;/a>&lt;/p>
&lt;p>The linter warning disappeared and my deployment continued to work just fine.&lt;/p>
&lt;p>This syntax is indeed easier to read. I had no idea, that it was possible to use methods on symbolic references.&lt;/p></description></item><item><title>How to export csv watchlists from Azure Sentinel</title><link>https://manualbashing.github.io/posts/how-to-export-csv-watchlists-from-azure-sentinel/</link><pubDate>Thu, 09 Mar 2023 15:30:37 +0200</pubDate><guid>https://manualbashing.github.io/posts/how-to-export-csv-watchlists-from-azure-sentinel/</guid><description>&lt;p>Azure Sentinel is Microsoft&amp;rsquo;s &lt;em>Security Information and Event Management&lt;/em> (SIEM) tool, that helps to identify security threats and to respond quickly when they occur. One could say that it is an organization&amp;rsquo;s enhanced ears and eyes, like.. you know:&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/The_Sentinel_(TV_series)">&lt;img src="https://manualbashing.github.io/static/the-sentinel.png" alt="The Sentinel">&lt;/a>&lt;/p>
&lt;p>Sentinel supports so called watchlists. Watchlists are csv files, that add custom information to the assets that you want to monitor closely.&lt;/p>
&lt;p>Creating and uploading watchlists is a piece of cake and can be done in the Azure Portal: &lt;a href="https://learn.microsoft.com/en-us/azure/sentinel/watchlists-create">Create watchlists - Microsoft Sentinel | Microsoft Learn&lt;/a>.&lt;/p>
&lt;p>But what if you need to download an existing watchlist? This appears to be unreasonably difficult. At the time of this writing there is no download button in the Azure Portal. And the &lt;a href="https://learn.microsoft.com/en-us/cli/azure/service-page/microsoft%20sentinel?view=azure-cli-latest">Azure CLI extention for Sentinel&lt;/a> doesn&amp;rsquo;t offer this option either.&lt;/p>
&lt;p>Fortunately the Azure Management REST API allows us to work around this limitation.&lt;/p>
&lt;h2 id="export-csv-watchlists-using-the-rest-api">Export csv watchlists using the REST API&lt;/h2>
&lt;p>There is an API method, that allows us to list the contents of the Sentinel watchlists in JSON format: &lt;a href="https://learn.microsoft.com/en-us/rest/api/securityinsights/preview/watchlist-items/list?tabs=HTTP">Watchlist Items - List - REST API (Azure Sentinel) | Microsoft Learn&lt;/a>.&lt;/p>
&lt;p>The only thing we need to do is to translate this output into the schema of the CSV files that Sentinel supports. This can be done with the following PowerShell cmdlet.&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/manualbashing/d52f7a74e03a2942628caa45fe3c8f65.js">&lt;/script>
&lt;p>&lt;a href="https://gist.github.com/manualbashing/d52f7a74e03a2942628caa45fe3c8f65">Export-SentinelWatchlist.ps1&lt;/a>&lt;/p>
&lt;p>To run this cmdlet the following requirements need to be met:&lt;/p>
&lt;ul>
&lt;li>It needs to be run in PowerShell Core&lt;/li>
&lt;li>The Az PowerShell module is installed&lt;/li>
&lt;li>You are connected to the correct Azure subscription with the Az PowerShell module (Run &lt;code>Get-AzContext&lt;/code> to check).&lt;/li>
&lt;/ul>
&lt;p>You can run this cmdlet for example like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>. ./&lt;span style="color:#a2f">Export-SentinelWatchlist&lt;/span>.ps1 &lt;span style="color:#080;font-style:italic"># dotsourcing the file that contains the cmdlet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a2f">Export-SentinelWatchlist&lt;/span> -ResourceGroupName &lt;span style="color:#b44">&amp;#39;rg-sentinel&amp;#39;&lt;/span> -WorkspaceName &lt;span style="color:#b44">&amp;#39;sws-sentinel-workspace&amp;#39;&lt;/span> -WatchlistName &lt;span style="color:#b44">&amp;#39;Customer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title> Query Azure Log Analytics from Logic App using Managed Identity</title><link>https://manualbashing.github.io/posts/logicapp-loganalytics-mi/</link><pubDate>Fri, 01 Apr 2022 17:15:55 +0200</pubDate><guid>https://manualbashing.github.io/posts/logicapp-loganalytics-mi/</guid><description>&lt;p>While &lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/logs/log-analytics-workspace-overview">Azure Log Analytics Workspaces&lt;/a> supports access using a &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview">Managed Identity&lt;/a> (formally known as: Managed Service Identity, MSI), the official &lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/logs/logicapp-flow-connector">Logic Apps connector for Azure Log Analytics (Azure Monitor Logs)&lt;/a> does not.&lt;/p>
&lt;p>As a workaround queries to a Log Analytics Workspace can also be send directly to the &lt;a href="https://docs.microsoft.com/en-us/rest/api/loganalytics/">Azure REST API&lt;/a>, as the built-in HTTP connector in Logic Apps supports Managed Identities.&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/logicapp-workspace-msi.png" alt="">&lt;/p>
&lt;p>I have added a minimal example to my bicep-snippets repository: &lt;a href="https://github.com/manualbashing/bicep-snippets/tree/mother/logicapp-msi-workspace">bicep-snippets/logicapp-msi-workspace at mother Â· manualbashing/bicep-snippets (github.com)&lt;/a>&lt;/p></description></item></channel></rss>