<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell on ManualBashing</title><link>https://manualbashing.github.io/tags/powershell/</link><description>Recent content in PowerShell on ManualBashing</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 09 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://manualbashing.github.io/tags/powershell/index.xml" rel="self" type="application/rss+xml"/><item><title>Decode any PowerShell Secure String under Linux</title><link>https://manualbashing.github.io/posts/decode-powershell-securestring-linux/</link><pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate><guid>https://manualbashing.github.io/posts/decode-powershell-securestring-linux/</guid><description>&lt;p>This is not a big deal, as &lt;em>secure strings&lt;/em> are not encrypted under Unix systems. The password will instead be obfuscated as hexadecimal representation of the string&amp;rsquo;s bytes.&lt;/p>
&lt;p>According to &lt;a href="https://www.reddit.com/r/PowerShell/comments/dtggfn/comment/f6wmpfu/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button">a user on reddit&lt;/a>, converting a string to a &lt;em>secure string&lt;/em> it is basically doing this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#800">BitConverter&lt;/span>]::ToString([&lt;span style="color:#800">Text.Encoding&lt;/span>]::Unicode.GetBytes(&lt;span style="color:#b44">&amp;#39;foo&amp;#39;&lt;/span>)).Replace(&lt;span style="color:#b44">&amp;#39;-&amp;#39;&lt;/span>,&lt;span style="color:#b44">&amp;#39;&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This can be demonstrated in the following way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">$password&lt;/span> = &lt;span style="color:#b44">&amp;#34;foo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">$secureString&lt;/span> = &lt;span style="color:#b8860b">$password&lt;/span> | &lt;span style="color:#a2f">ConvertTo-SecureString&lt;/span> -AsPlainText -Force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">$serializedSecureString&lt;/span> = &lt;span style="color:#b8860b">$secureString&lt;/span> | &lt;span style="color:#a2f">ConvertFrom-SecureString&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">$byteArray&lt;/span> = [&lt;span style="color:#800">byte[]&lt;/span>] -split (&lt;span style="color:#b8860b">$serializedSecureString&lt;/span> &lt;span style="color:#666">-replace&lt;/span> &lt;span style="color:#b44">&amp;#39;..&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0x$&amp;amp; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">$utf8&lt;/span> = [&lt;span style="color:#800">Text.Encoding&lt;/span>]::UTF8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">$decodedPassword&lt;/span> = &lt;span style="color:#b8860b">$utf8&lt;/span>.GetString(&lt;span style="color:#b8860b">$byteArray&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a2f">Write-Host&lt;/span> &lt;span style="color:#b44">&amp;#34;Password: &lt;/span>&lt;span style="color:#b8860b">$password&lt;/span>&lt;span style="color:#b44"> | Decoded Password: &lt;/span>&lt;span style="color:#b8860b">$decodedPassword&lt;/span>&lt;span style="color:#b44">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Under Windows this will not lead to a useful value for &lt;code>$decodedPassword&lt;/code>, as Windows systems encrypt the &lt;em>secure string&lt;/em> based on the profile of the current User and Host. Under Linux the value for &lt;code>$password&lt;/code> and &lt;code>$decodedPassword&lt;/code> will be identical.&lt;/p>
&lt;p>So better find another way to store your automation secrets under Linux or even better: avoid them alltogether by using certificates or managed identities if possible.&lt;/p></description></item></channel></rss>