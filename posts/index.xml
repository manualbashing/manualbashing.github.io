<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ManualBashing</title><link>https://manualbashing.github.io/posts/</link><description>Recent content in Posts on ManualBashing</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 17 Nov 2023 13:37:45 +0000</lastBuildDate><atom:link href="https://manualbashing.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Keep your secrets out of your bicep parameters</title><link>https://manualbashing.github.io/posts/keep-your-secrets-out-of-your-bicep-parameters/</link><pubDate>Fri, 17 Nov 2023 13:37:45 +0000</pubDate><guid>https://manualbashing.github.io/posts/keep-your-secrets-out-of-your-bicep-parameters/</guid><description>&lt;p>Imagine the following scenario: We have to deploy an Azure Key Vault that comes already populated with a secret, let&amp;rsquo;s say, some third party&amp;rsquo;s API access key. Our bicep file (&lt;code>azuredeploy.bicep&lt;/code>) could look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="">param&lt;/span> &lt;span style="">location&lt;/span> &lt;span style="">string&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">resourceGroup().location&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">param&lt;/span> &lt;span style="">tenantId&lt;/span> &lt;span style="">string&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">tenant().tenantId&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">@secure()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">param&lt;/span> &lt;span style="">keyvaultSecretCatfunValue&lt;/span> &lt;span style="">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">var&lt;/span> &lt;span style="">name&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">&amp;#39;kv-$&lt;/span>{&lt;span style="">uniqueString(resourceGroup().id)&lt;/span>}&lt;span style="">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">resource&lt;/span> &lt;span style="">keyVault&lt;/span> &lt;span style="">&amp;#39;Microsoft.KeyVault/vaults@&lt;/span>&lt;span style="color:#666">2019-09-01&lt;/span>&lt;span style="">&amp;#39;&lt;/span> &lt;span style="">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">name:&lt;/span> &lt;span style="">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">location:&lt;/span> &lt;span style="">location&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">properties:&lt;/span> &lt;span style="">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tenantId:&lt;/span> &lt;span style="">tenantId&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">sku:&lt;/span> &lt;span style="">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">name:&lt;/span> &lt;span style="">&amp;#39;standard&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">family:&lt;/span> &lt;span style="">&amp;#39;A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">accessPolicies:&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">resource&lt;/span> &lt;span style="">keyvaultSecretCatfun&lt;/span> &lt;span style="">&amp;#39;Microsoft.KeyVault/vaults/secrets@&lt;/span>&lt;span style="color:#666">2019-09-01&lt;/span>&lt;span style="">&amp;#39;&lt;/span> &lt;span style="">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">parent:&lt;/span> &lt;span style="">keyVault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">name:&lt;/span> &lt;span style="">&amp;#39;Catfun&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">properties:&lt;/span> &lt;span style="">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">value:&lt;/span> &lt;span style="">keyvaultSecretCatfunValue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But how to we deploy this to Azure without entering the secret&amp;rsquo;s value every time we call &lt;code>az deployment&lt;/code>?&lt;/p>
&lt;h2 id="loading-individual-secrets-from-external-files">Loading individual secrets from external files&lt;/h2>
&lt;p>One trick that worked well for me so far, was to use an external text file, that would be excluded from version control.&lt;/p>
&lt;p>For this to work would create a file &lt;code>Catfun.secret&lt;/code> that contains the API secret and make sure, that it is excluded from version control via &lt;code>.gitignore&lt;/code>.&lt;/p>
&lt;p>This secret would then be loaded by the bicep template as the default value for the &lt;code>keyvaultSecretCatfunValue&lt;/code> parameter:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="">@secure()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#disable-next-line&lt;/span> &lt;span style="">secure-parameter-default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">param&lt;/span> &lt;span style="">keyvaultSecretCatfunValue&lt;/span> &lt;span style="">string&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">loadTextContent(&amp;#39;Catfun.secret&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(We have to add &lt;code>#disable-next-line secure-parameter-default&lt;/code>) to ignore the warning, that secure parameters should not use default values. Our scenario is a reasonable exception to this rule.)&lt;/p>
&lt;p>![[vscode-secrets-file.png]]&lt;/p>
&lt;h2 id="loading-several-secrets-from-the-same-file">Loading several secrets from the same file&lt;/h2>
&lt;p>If you need to deploy several secrets in a secure way it is not necessary to create a secret file for each. Instead you can save your secrets in a json file, that can be parsed by bicep.&lt;/p>
&lt;p>The content of my &lt;code>MoreSecrets.json&lt;/code> file looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;Catfun&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;MySuperSecretAPIKey!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;Fishfun&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;TheSameButBetter##!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The file can then be parsed using the &lt;code>loadJsonContent()&lt;/code> function in bicep:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="">param&lt;/span> &lt;span style="">location&lt;/span> &lt;span style="">string&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">resourceGroup().location&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">param&lt;/span> &lt;span style="">tenantId&lt;/span> &lt;span style="">string&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">tenant().tenantId&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">@secure()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#disable-next-line&lt;/span> &lt;span style="">secure-parameter-default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">param&lt;/span> &lt;span style="">secrets&lt;/span> &lt;span style="">object&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">loadJsonContent(&amp;#39;MoreFun.secret&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">var&lt;/span> &lt;span style="">name&lt;/span> &lt;span style="">=&lt;/span> &lt;span style="">&amp;#39;kv-$&lt;/span>{&lt;span style="">uniqueString(resourceGroup().id)&lt;/span>}&lt;span style="">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">resource&lt;/span> &lt;span style="">keyVault&lt;/span> &lt;span style="">&amp;#39;Microsoft.KeyVault/vaults@&lt;/span>&lt;span style="color:#666">2019-09-01&lt;/span>&lt;span style="">&amp;#39;&lt;/span> &lt;span style="">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">name:&lt;/span> &lt;span style="">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">location:&lt;/span> &lt;span style="">location&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">properties:&lt;/span> &lt;span style="">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tenantId:&lt;/span> &lt;span style="">tenantId&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">sku:&lt;/span> &lt;span style="">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">name:&lt;/span> &lt;span style="">&amp;#39;standard&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">family:&lt;/span> &lt;span style="">&amp;#39;A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">accessPolicies:&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">resource&lt;/span> &lt;span style="">keyvaultSecretCatfun&lt;/span> &lt;span style="">&amp;#39;Microsoft.KeyVault/vaults/secrets@&lt;/span>&lt;span style="color:#666">2019-09-01&lt;/span>&lt;span style="">&amp;#39;&lt;/span> &lt;span style="">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">parent:&lt;/span> &lt;span style="">keyVault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">name:&lt;/span> &lt;span style="">&amp;#39;Catfun&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">properties:&lt;/span> &lt;span style="">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">value:&lt;/span> &lt;span style="">secrets.Catfun&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">resource&lt;/span> &lt;span style="">keyvaultSecretFishfun&lt;/span> &lt;span style="">&amp;#39;Microsoft.KeyVault/vaults/secrets@&lt;/span>&lt;span style="color:#666">2019-09-01&lt;/span>&lt;span style="">&amp;#39;&lt;/span> &lt;span style="">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">parent:&lt;/span> &lt;span style="">keyVault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">name:&lt;/span> &lt;span style="">&amp;#39;Fishfun&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">properties:&lt;/span> &lt;span style="">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">value:&lt;/span> &lt;span style="">secrets.Fishfun&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="protect-your-local-secret-files">Protect your local secret files&lt;/h2>
&lt;p>So far we have managed to keep our secrets out of version control, but they are still laying around in plain text files, which is not what we want for any type of secret.&lt;/p>
&lt;p>One way I like to do this is by encrypting the secrets using the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ugosan.vscode-openpgp">OpenPGP extension&lt;/a> in vscode (&lt;code>ugosan.vscode-openpgp&lt;/code>).&lt;/p>
&lt;p>This allows me to protect the files that contain the secrets using a private key and passphrase.&lt;/p>
&lt;p>![[secrets-gpg-animation.gif]]&lt;/p></description></item><item><title>Split an array into n-equal arrays in Azure Logic Apps</title><link>https://manualbashing.github.io/posts/split-an-array-into-n-equal-arrays-in-azure-logic-apps/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><guid>https://manualbashing.github.io/posts/split-an-array-into-n-equal-arrays-in-azure-logic-apps/</guid><description>&lt;p>Let&amp;rsquo;s say you have an array like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">4&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">6&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">7&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">8&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">9&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you would like to create slices of this array which contain not more than 3 elements each:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#666">1&lt;/span>, &lt;span style="color:#666">2&lt;/span>, &lt;span style="color:#666">3&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#666">4&lt;/span>, &lt;span style="color:#666">5&lt;/span>, &lt;span style="color:#666">6&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#666">7&lt;/span>, &lt;span style="color:#666">8&lt;/span>, &lt;span style="color:#666">8&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#666">10&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to solve this type of problem, I have seen people to resort to JavaScript, Azure Functions or complicated contraptions within Logic Apps. The alternative is to use a surprisingly little known expression function called &lt;code>chunk()&lt;/code>: &lt;a href="https://learn.microsoft.com/en-us/azure/logic-apps/workflow-definition-language-functions-reference#chunk">chunk() - Reference guide for expression functions - Azure Logic Apps&lt;/a>.&lt;/p>
&lt;p>The function takes two elements. The first is the array, that needs to be sliced, and the second is the slice length.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>chunk(&lt;span style="color:#b44">&amp;#39;[1,2,3,4,5,6,7,8,9,10]&amp;#39;&lt;/span>, &lt;span style="color:#666">3&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://manualbashing.github.io/static/logicapps-chunk.png" alt="logic apps chunk">&lt;/p>
&lt;p>See here for the full workflow definition of this example:&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/manualbashing/e37e4e0670d23838eb4a636bec1f01aa.js">&lt;/script>
&lt;p>&lt;a href="https://gist.github.com/manualbashing/e37e4e0670d23838eb4a636bec1f01aa">See Gist on Github&lt;/a>&lt;/p></description></item><item><title>Transform your data with XPath in Logic Apps and Power Automate</title><link>https://manualbashing.github.io/posts/transform-your-data-with-xpath-in-logic-apps-and-power-automate/</link><pubDate>Tue, 14 Mar 2023 14:24:01 +0000</pubDate><guid>https://manualbashing.github.io/posts/transform-your-data-with-xpath-in-logic-apps-and-power-automate/</guid><description>&lt;p>Imagine you are writing a Logic App or a Power Automate flow and you want to transfrom the following data structure:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;books&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;book&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;Bullshit Jobs: A Theory&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;author&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;David Graeber&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;Fragments of an Anarchist Anthropology (Paradigm)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;author&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;David Graeber&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;title&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;In Praise of Idleness&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;author&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;Bertrand Russell&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>into something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;author&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;David Graeber&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;books&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b44">&amp;#34;Bullshit Jobs: A Theory&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b44">&amp;#34;Fragments of an Anarchist Anthropology (Paradigm)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;author&amp;#34;&lt;/span>: &lt;span style="color:#b44">&amp;#34;Bertrand Russell&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;#34;books&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b44">&amp;#34;In Praise of Idleness&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>What type of transformation is done here? For each author we need to create an array of all the author&amp;rsquo;s books. A straight forward approach would be to use the &lt;a href="https://learn.microsoft.com/en-us/azure/logic-apps/logic-apps-perform-data-operations?tabs=consumption#filter-array-action">filter array action&lt;/a>.&lt;/p>
&lt;p>But there are two problems here:&lt;/p>
&lt;ol>
&lt;li>How do we know which authors exist in the list and how do we deal with authors (like &amp;ldquo;David Graeber&amp;rdquo;) that appears several times in the list?&lt;/li>
&lt;li>Even after filtering the list down to books by &amp;ldquo;David Graeber&amp;rdquo;, how do we manage to merge the resulting book titles into a single array?&lt;/li>
&lt;/ol>
&lt;p>Tasks like this are not uncommon but often quite tricky to solve without using several for-each loops and conditions, which would inflate the workflow unnecessarily and make it hard to read.&lt;/p>
&lt;p>This is where XPath comes into the picture. XPath is a language used to navigate and query XML documents. In simple terms, XML documents are like trees, where each element is a node in the tree. XPath allows you to specify a path through this tree to locate specific nodes or groups of nodes.&lt;/p>
&lt;p>Let&amp;rsquo;s take our example above. Converted to xml, it would look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000;font-weight:bold">&amp;lt;books&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;title&amp;gt;&lt;/span>Bullshit Jobs: A Theory&lt;span style="color:#008000;font-weight:bold">&amp;lt;/title&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;author&amp;gt;&lt;/span>David Graeber&lt;span style="color:#008000;font-weight:bold">&amp;lt;/author&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;/book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;title&amp;gt;&lt;/span>Fragments of an Anarchist Anthropology (Paradigm)&lt;span style="color:#008000;font-weight:bold">&amp;lt;/title&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;author&amp;gt;&lt;/span>David Graeber&lt;span style="color:#008000;font-weight:bold">&amp;lt;/author&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;/book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;title&amp;gt;&lt;/span>In Praise of Idleness&lt;span style="color:#008000;font-weight:bold">&amp;lt;/title&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;author&amp;gt;&lt;/span>Bertrand Russell&lt;span style="color:#008000;font-weight:bold">&amp;lt;/author&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;/book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000;font-weight:bold">&amp;lt;/books&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Using XPath, you can select nodes from this document based on their element name, or position in the document. And we can use this to solve the problems, stated above:&lt;/p>
&lt;ul>
&lt;li>&lt;code>//author/text()&lt;/code>: Selects the text value of all &lt;code>author&lt;/code> elements that appear anywhere in the xml document.&lt;/li>
&lt;li>&lt;code>//author[text()=&amp;quot;David Graeber&amp;quot;]/following-sibling::title/text()&lt;/code>: This first selects the &lt;code>author&lt;/code> element that has &lt;code>&amp;quot;David Graeber&amp;quot;&lt;/code> as a text value. From this node it determines the text value of the the &lt;code>title&lt;/code> element, that is its immediate sibling.&lt;/li>
&lt;/ul>
&lt;p>For more examples on XPath queries that can be used in Logic Apps and Power Automate see: &lt;a href="https://learn.microsoft.com/en-us/azure/logic-apps/workflow-definition-language-functions-reference#xpath">xpath() - Reference guide for expression functions - Azure Logic Apps&lt;/a>&lt;/p>
&lt;p>Let&amp;rsquo;s see now, how these two XPath queries help us to transform the data in our example.&lt;/p>
&lt;h2 id="transforming-json-data-to-xml">Transforming JSON data to XML&lt;/h2>
&lt;p>XPath only works on XML documents. In order to use XPath we will need to transform our JSON objects to XML first. This can be done using the &lt;code>xml()&lt;/code> expression function, but there is a caveat:&lt;/p>
&lt;blockquote>
&lt;p>⚠️ XML documents must have a single root element.&lt;/p>
&lt;/blockquote>
&lt;p>This means, that it is not possible to transform &lt;code>{&amp;quot;foo&amp;quot;:[ &amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;]}&lt;/code> into xml, as this would be translated as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000;font-weight:bold">&amp;lt;foo&amp;gt;&lt;/span>A&lt;span style="color:#008000;font-weight:bold">&amp;lt;/foo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000;font-weight:bold">&amp;lt;foo&amp;gt;&lt;/span>B&lt;span style="color:#008000;font-weight:bold">&amp;lt;/foo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000;font-weight:bold">&amp;lt;foo&amp;gt;&lt;/span>C&lt;span style="color:#008000;font-weight:bold">&amp;lt;/foo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instead we have to provide a single root element to the data structure before attempting the conversion to XML: &lt;code>{&amp;quot;bar&amp;quot;:{&amp;quot;foo&amp;quot;:[ &amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;]}}&lt;/code>. This would translate into valid XML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000;font-weight:bold">&amp;lt;bar&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;foo&amp;gt;&lt;/span>A&lt;span style="color:#008000;font-weight:bold">&amp;lt;/foo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;foo&amp;gt;&lt;/span>B&lt;span style="color:#008000;font-weight:bold">&amp;lt;/foo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000;font-weight:bold">&amp;lt;foo&amp;gt;&lt;/span>C&lt;span style="color:#008000;font-weight:bold">&amp;lt;/foo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000;font-weight:bold">&amp;lt;/bar&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Accordingly in a Logic App we would do it like this:&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/transform-xml.png" alt="">&lt;/p>
&lt;p>The actual conversion to XML is then done in a compose action with the following expression:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>xml(outputs(&lt;span style="color:#b44">&amp;#39;Compose_-_provide_root_element_to_books_array_for_xml_transformation&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output of this last compose action, is what we will be working with, when applying the XPath.&lt;/p>
&lt;h2 id="getting-a-list-of-authors-with-distinct-values">Getting a list of authors with distinct values&lt;/h2>
&lt;p>The following XPath query can be used to get a list of all authors from the XML in our example: &lt;code>//author/text()&lt;/code>. To apply the XPath the expression function &lt;code>xpath()&lt;/code> is used:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>xpath(outputs(&lt;span style="color:#b44">&amp;#39;Compose_-_transform_books_array_to_xml&amp;#39;&lt;/span>), &lt;span style="color:#b44">&amp;#39;//author/text()&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will result in a string array with all author names, but this list does not yet contain distinct values, which means that &amp;ldquo;David Graeber&amp;rdquo; would appear two times. While XPath offers functions that would allow to return distinct values, these functions are unfortunately not supported in Logic Apps and Power Automate.&lt;/p>
&lt;p>Instead we can use the &lt;code>union()&lt;/code> expression function. A trick, that I have explained earlier on this blog: &lt;a href="https://manualbashing.github.io/posts/get-distinct-values-from-array-in-logic-apps-and-power-automate/">Get distinct values from array in Logic Apps and Power Automate (manualbashing.github.io)&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>union(xpath(outputs(&lt;span style="color:#b44">&amp;#39;Compose_-_transform_books_array_to_xml&amp;#39;&lt;/span>), &lt;span style="color:#b44">&amp;#39;//author/text()&amp;#39;&lt;/span>), json(&lt;span style="color:#b44">&amp;#39;[]&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will result in a list of authors. in which each author appears only once.&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/distinct-values.png" alt="distinct values">&lt;/p>
&lt;h2 id="get-an-array-of-book-titles-by-author">Get an array of book titles by author&lt;/h2>
&lt;p>Now that we have list of all authors, a single for each loop will be enough to transform the data in the way, that we want.&lt;/p>
&lt;p>First we interate over the list of authors to prepare an XPath query that will return the titles of all books of the current author:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">//&lt;/span>author[text()&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#b44">&amp;#34;@{item()}&amp;#34;&lt;/span>]&lt;span style="color:#666">/&lt;/span>following&lt;span style="color:#666">-&lt;/span>sibling::title&lt;span style="color:#666">/&lt;/span>text()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This first selects the &lt;code>author&lt;/code> element that has the current author&amp;rsquo;s name as a text value. From this node it determines the text value of the the &lt;code>title&lt;/code> element, that is its immediate sibling. The current author&amp;rsquo;s name is returned by the expression &lt;code>item()&lt;/code>, which refers to the current element in the for each loop.&lt;/p>
&lt;p>To execute the XPath query we use another compose step and add the following expression:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>xpath(outputs(&lt;span style="color:#b44">&amp;#39;Compose_-_transform_books_array_to_xml&amp;#39;&lt;/span>), outputs(&lt;span style="color:#b44">&amp;#39;Compose_-_XPath_expression&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The result we can then arrange into a new object and add this to an array variable.&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/books-by-author.png" alt="Books by author">&lt;/p>
&lt;p>The result of our efforts looks like this:&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/transformation-result.png" alt="transformation result">&lt;/p>
&lt;blockquote>
&lt;p>⌨️ &lt;strong>Example&lt;/strong>&lt;/p>
&lt;p>To see this all in action, you can deploy a minimal example that I have added to my bicep-snippets repository: &lt;a href="https://github.com/manualbashing/bicep-snippets/tree/mother/logicapp-xpath">bicep-snippets/logicapp-msi-workspace at mother · manualbashing/bicep-snippets (github.com)&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>Get distinct values from array in Logic Apps and Power Automate</title><link>https://manualbashing.github.io/posts/get-distinct-values-from-array-in-logic-apps-and-power-automate/</link><pubDate>Mon, 13 Mar 2023 12:31:45 +0000</pubDate><guid>https://manualbashing.github.io/posts/get-distinct-values-from-array-in-logic-apps-and-power-automate/</guid><description>&lt;p>It is a fairly common task to get only distinct values from an array. That means only those values, that are not duplicates.&lt;/p>
&lt;p>Imagine you have the following array:&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/distinct-values-myArray.png" alt="distinct-values-myArray">&lt;/p>
&lt;p>If you want only distinct values from this array, that means you want &lt;code>[ &amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot;, &amp;quot;D&amp;quot;]&lt;/code> without the duplicate &lt;code>&amp;quot;A&amp;quot;&lt;/code>.&lt;/p>
&lt;p>As you can guess from the previous screenshot, this can be done with the &lt;code>union()&lt;/code> function, that is available in both Logic Apps and Power Automate. The actual purpose of this function is to create a union between two arrays or objects:&lt;/p>
&lt;blockquote>
&lt;p>Returns a single array or object with all the elements that are in either array or object passed to this function.&lt;/p>
&lt;p>👉 &lt;a href="https://learn.microsoft.com/en-us/azure/logic-apps/workflow-definition-language-functions-reference#union">union() - Reference guide for expression functions - Azure Logic Apps&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>A side effect of this function is, that each element is returned only once. That means creating a union of an array either with itself or with an empty array will result in an array that contains only distinct values.&lt;/p>
&lt;p>The expression in our example would be:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>union(variables(&lt;span style="color:#b44">&amp;#39;myArray&amp;#39;&lt;/span>), json(&lt;span style="color:#b44">&amp;#39;[]&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The expression &lt;code>json('[]')&lt;/code> is an easy way to create an empty array for the union.&lt;/p></description></item><item><title>A new preferred way to call listKeys() in bicep</title><link>https://manualbashing.github.io/posts/a-new-preferred-way-to-call-listkeys-in-bicep/</link><pubDate>Fri, 10 Mar 2023 11:45:00 +0100</pubDate><guid>https://manualbashing.github.io/posts/a-new-preferred-way-to-call-listkeys-in-bicep/</guid><description>&lt;p>After upgrading to &lt;code>Bicep CLI version 0.15.31 (3ba6e06a8d)&lt;/code> I got a linter warning in one of my bicep files:&lt;/p>
&lt;blockquote>
&lt;p>Use a resource reference instead of invoking function &amp;ldquo;listKeys&amp;rdquo;. This simplifies the syntax and allows Bicep to better understand your deployment dependency graph.bicep core &lt;a href="https://aka.ms/bicep/linter/use-resource-symbol-reference">https://aka.ms/bicep/linter/use-resource-symbol-reference&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>The offensive line was where I am reading the access key from a log analytics workspace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="">listKeys(logAnalyticsWorkspace.id,&lt;/span> &lt;span style="">logAnalyticsWorkspace.apiVersion).primarySharedKey&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unfortunately the URL in the linter message did not resolve to any help page but redirected me to bing instead.&lt;/p>
&lt;p>So I tried my best guess as to what the linter tried to tell me and I got lucky:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="">logAnalyticsWorkspace.listKeys().primarySharedKey&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The linter warning disappeared and my deployment continued to work just fine.&lt;/p>
&lt;p>This syntax is indeed easier to read. I had no idea, that it was possible to use methods on symbolic references.&lt;/p></description></item><item><title>How to export csv watchlists from Azure Sentinel</title><link>https://manualbashing.github.io/posts/how-to-export-csv-watchlists-from-azure-sentinel/</link><pubDate>Thu, 09 Mar 2023 15:30:37 +0200</pubDate><guid>https://manualbashing.github.io/posts/how-to-export-csv-watchlists-from-azure-sentinel/</guid><description>&lt;p>Azure Sentinel is Microsoft&amp;rsquo;s &lt;em>Security Information and Event Management&lt;/em> (SIEM) tool, that helps to identify security threats and to respond quickly when they occur. One could say that it is an organization&amp;rsquo;s enhanced ears and eyes, like.. you know:&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/The_Sentinel_(TV_series)">&lt;img src="https://manualbashing.github.io/static/the-sentinel.png" alt="The Sentinel">&lt;/a>&lt;/p>
&lt;p>Sentinel supports so called watchlists. Watchlists are csv files, that add custom information to the assets that you want to monitor closely.&lt;/p>
&lt;p>Creating and uploading watchlists is a piece of cake and can be done in the Azure Portal: &lt;a href="https://learn.microsoft.com/en-us/azure/sentinel/watchlists-create">Create watchlists - Microsoft Sentinel | Microsoft Learn&lt;/a>.&lt;/p>
&lt;p>But what if you need to download an existing watchlist? This appears to be unreasonably difficult. At the time of this writing there is no download button in the Azure Portal. And the &lt;a href="https://learn.microsoft.com/en-us/cli/azure/service-page/microsoft%20sentinel?view=azure-cli-latest">Azure CLI extention for Sentinel&lt;/a> doesn&amp;rsquo;t offer this option either.&lt;/p>
&lt;p>Fortunately the Azure Management REST API allows us to work around this limitation.&lt;/p>
&lt;h2 id="export-csv-watchlists-using-the-rest-api">Export csv watchlists using the REST API&lt;/h2>
&lt;p>There is an API method, that allows us to list the contents of the Sentinel watchlists in JSON format: &lt;a href="https://learn.microsoft.com/en-us/rest/api/securityinsights/preview/watchlist-items/list?tabs=HTTP">Watchlist Items - List - REST API (Azure Sentinel) | Microsoft Learn&lt;/a>.&lt;/p>
&lt;p>The only thing we need to do is to translate this output into the schema of the CSV files that Sentinel supports. This can be done with the following PowerShell cmdlet.&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/manualbashing/d52f7a74e03a2942628caa45fe3c8f65.js">&lt;/script>
&lt;p>&lt;a href="https://gist.github.com/manualbashing/d52f7a74e03a2942628caa45fe3c8f65">Export-SentinelWatchlist.ps1&lt;/a>&lt;/p>
&lt;p>To run this cmdlet the following requirements need to be met:&lt;/p>
&lt;ul>
&lt;li>It needs to be run in PowerShell Core&lt;/li>
&lt;li>The Az PowerShell module is installed&lt;/li>
&lt;li>You are connected to the correct Azure subscription with the Az PowerShell module (Run &lt;code>Get-AzContext&lt;/code> to check).&lt;/li>
&lt;/ul>
&lt;p>You can run this cmdlet for example like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>. ./&lt;span style="color:#a2f">Export-SentinelWatchlist&lt;/span>.ps1 &lt;span style="color:#080;font-style:italic"># dotsourcing the file that contains the cmdlet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a2f">Export-SentinelWatchlist&lt;/span> -ResourceGroupName &lt;span style="color:#b44">&amp;#39;rg-sentinel&amp;#39;&lt;/span> -WorkspaceName &lt;span style="color:#b44">&amp;#39;sws-sentinel-workspace&amp;#39;&lt;/span> -WatchlistName &lt;span style="color:#b44">&amp;#39;Customer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>dotnet SDK not found in VSCode Dev Container Ubuntu Jammy (22.04)</title><link>https://manualbashing.github.io/posts/dotnet-fails-in-devcontainer/</link><pubDate>Wed, 24 Aug 2022 14:37:45 +0200</pubDate><guid>https://manualbashing.github.io/posts/dotnet-fails-in-devcontainer/</guid><description>&lt;p>A couple of days ago, some of my &lt;a href="https://code.visualstudio.com/docs/remote/containers">vscode dev containers&lt;/a> suddenly failed to build. Here is a minimal example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a2f;font-weight:bold">FROM&lt;/span>&lt;span style="color:#b44"> mcr.microsoft.com/vscode/devcontainers/base:0-jammy&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">SHELL&lt;/span> [&lt;span style="color:#b44">&amp;#34;/bin/bash&amp;#34;&lt;/span>, &lt;span style="color:#b44">&amp;#34;-lc&amp;#34;&lt;/span>]&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">RUN&lt;/span> wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb -q &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span>  &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> dpkg -i packages-microsoft-prod.deb &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span>  &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> rm packages-microsoft-prod.deb&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">RUN&lt;/span> apt update &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> apt install -y --no-install-recommends dotnet-sdk-6.0&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">RUN&lt;/span> dotnet tool install -g Microsoft.dotnet-interactive&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This was working fine before, but now I got the following error message:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Step 5/5 : RUN dotnet tool install -g Microsoft.dotnet-interactive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ---&amp;gt; Running in 52e362723554
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The command could not be loaded, possibly because:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * You intended to execute a .NET application:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The application &amp;#39;tool&amp;#39; does not exist.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * You intended to execute a .NET SDK command:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> No .NET SDKs were found.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As far as I understood the problem here is, that the &lt;code>dotnet-sdk-6.0&lt;/code> package and its dependencies are now available in both, the Ubuntu and the Microsoft repository, but their install locations are different. This will mess up the installation, if packages are picked from both feeds.&lt;/p>
&lt;p>See here for more information:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dotnet/sdk/issues/27082">[Ubuntu 22.04] dotnet doesn&amp;rsquo;t find installed SDKs · Issue #27082 · dotnet/sdk · GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dotnet/core/issues/7699">Installing .NET 6 on Ubuntu 22.04 (Jammy) · Issue #7699 · dotnet/core · GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>A workaround to this issue is to use apt&amp;rsquo;s &lt;a href="https://help.ubuntu.com/community/PinningHowto">pinning mechanism&lt;/a> to set the Microsoft feed as the preferred repository. This means apt will try to install a package from the Microsoft feed first and then fall back to the distribution repository, if the package is not available.&lt;/p>
&lt;p>To configure a preference, create a file called &lt;code>apt-preference&lt;/code> in your &lt;code>.devcontainer&lt;/code> folder and add the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Package: *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Pin: origin &amp;#34;packages.microsoft.com&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Pin-Priority: 1001
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then add a copy statement to your Dockerfile to use this file as your configuration for apt pins.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a2f;font-weight:bold">FROM&lt;/span>&lt;span style="color:#b44"> mcr.microsoft.com/vscode/devcontainers/base:0-jammy&lt;/span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">SHELL&lt;/span> [&lt;span style="color:#b44">&amp;#34;/bin/bash&amp;#34;&lt;/span>, &lt;span style="color:#b44">&amp;#34;-lc&amp;#34;&lt;/span>]&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">RUN&lt;/span> wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb -q &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span>  &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> dpkg -i packages-microsoft-prod.deb &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span>  &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> rm packages-microsoft-prod.deb&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">COPY&lt;/span> ./apt-preferences /etc/apt/preferences&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">RUN&lt;/span> apt update &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> apt install -y --no-install-recommends dotnet-sdk-6.0&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">&lt;/span>&lt;span style="color:#a2f;font-weight:bold">RUN&lt;/span> dotnet tool install -g Microsoft.dotnet-interactive&lt;span style="">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title> Query Azure Log Analytics from Logic App using Managed Identity</title><link>https://manualbashing.github.io/posts/logicapp-loganalytics-mi/</link><pubDate>Fri, 01 Apr 2022 17:15:55 +0200</pubDate><guid>https://manualbashing.github.io/posts/logicapp-loganalytics-mi/</guid><description>&lt;p>While &lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/logs/log-analytics-workspace-overview">Azure Log Analytics Workspaces&lt;/a> supports access using a &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview">Managed Identity&lt;/a> (formally known as: Managed Service Identity, MSI), the official &lt;a href="https://docs.microsoft.com/en-us/azure/azure-monitor/logs/logicapp-flow-connector">Logic Apps connector for Azure Log Analytics (Azure Monitor Logs)&lt;/a> does not.&lt;/p>
&lt;p>As a workaround queries to a Log Analytics Workspace can also be send directly to the &lt;a href="https://docs.microsoft.com/en-us/rest/api/loganalytics/">Azure REST API&lt;/a>, as the built-in HTTP connector in Logic Apps supports Managed Identities.&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/logicapp-workspace-msi.png" alt="">&lt;/p>
&lt;blockquote>
&lt;p>⌨️ &lt;strong>Example&lt;/strong>&lt;/p>
&lt;p>I have added a minimal example to my bicep-snippets repository: &lt;a href="https://github.com/manualbashing/bicep-snippets/tree/mother/logicapp-msi-workspace">bicep-snippets/logicapp-msi-workspace at mother · manualbashing/bicep-snippets (github.com)&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>Watch out for EOL characters when using the base64 tool with stdin</title><link>https://manualbashing.github.io/posts/base64-stdin/</link><pubDate>Wed, 30 Mar 2022 15:11:53 +0100</pubDate><guid>https://manualbashing.github.io/posts/base64-stdin/</guid><description>&lt;p>In a Linux environment, the &lt;a href="http://manpages.ubuntu.com/manpages/bionic/man1/base64.1.html">base64 tool&lt;/a> can be used to base64 encode or decode data. If called directly the tool expects a file path but it is also possible to use stdin. This means we can use &lt;code>echo&lt;/code> or &lt;code>printf&lt;/code> together with a pipe to encode (or decode) a string without writing it to a file first.&lt;/p>
&lt;p>But be careful which command you use! The same string &lt;code>'foobar'&lt;/code> will result in a different base64 encoded string, depending on whether &lt;code>echo&lt;/code> or &lt;code>printf&lt;/code> was used:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>❯ &lt;span style="color:#a2f">echo&lt;/span> &lt;span style="color:#b44">&amp;#39;foobar&amp;#39;&lt;/span> | base64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">Zm9vYmFyCg&lt;/span>&lt;span style="color:#666">==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>❯ &lt;span style="color:#a2f">printf&lt;/span> &lt;span style="color:#b44">&amp;#39;foobar&amp;#39;&lt;/span> | base64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Zm9vYmFy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But why is that so? The short answer: &lt;a href="https://linuxhint.com/printf-vs-echo-bash">echo always adds an end-of-line character to the string&lt;/a>, and this character gets encoded too in the base64 string.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>❯ &lt;span style="color:#a2f">echo&lt;/span> &lt;span style="color:#b44">&amp;#39;foobar&amp;#39;&lt;/span> | od -c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0000000&lt;/span> f o o b a r &lt;span style="color:#b62;font-weight:bold">\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0000007&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>❯ &lt;span style="color:#a2f">printf&lt;/span> &lt;span style="color:#b44">&amp;#39;foobar&amp;#39;&lt;/span> | od -c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0000000&lt;/span> f o o b a r
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0000006&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The end-of-line character is not only added by &lt;code>echo&lt;/code>. Using the &lt;code>&amp;lt;&amp;lt;&amp;lt;&lt;/code> redirection also has this effect.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>❯ &lt;span style="color:#b8860b">encodedString&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span> base64 &lt;span style="color:#666">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#b44">&amp;#39;foobar&amp;#39;&lt;/span> &lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>❯ base64 --decode &lt;span style="color:#666">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#b8860b">$encodedString&lt;/span> | od -c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0000000&lt;/span> f o o b a r &lt;span style="color:#b62;font-weight:bold">\n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0000007&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>🧐&lt;strong>And remember&lt;/strong>
&amp;ldquo;Base64 is an encoding, &lt;a href="https://base64.guru/blog/base64-encryption-is-a-lie">not an encryption&lt;/a>&amp;rdquo;.
&lt;img src="https://manualbashing.github.io/static/base64.jpg" alt="">&lt;/p>
&lt;/blockquote></description></item><item><title>Issues with Terraform and WSL: Unable to list provider registration status</title><link>https://manualbashing.github.io/posts/terraform-wsl/</link><pubDate>Thu, 24 Feb 2022 11:03:43 +0100</pubDate><guid>https://manualbashing.github.io/posts/terraform-wsl/</guid><description>&lt;h2 id="the-problem">The problem&lt;/h2>
&lt;p>Today, something weird happened when I was using terraform in my WSL2 to deploy some infrastructure to Azure. I was initializing terraform, typed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>terraform plan
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And&amp;hellip; nothing happened.&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/10minuteslater.png" alt="10 minutes later">&lt;/p>
&lt;p>After waiting a small eternity the following error popped up on my console:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Error: Unable to list provider registration status; it is possible that this is due to invalid credentials or the service principal does not have permission to use the Resource Manager API&lt;/strong>, Azure error: resources. ProvidersClient#List: Failure sending request: StatusCode=0 &amp;ndash; Original Error: Get &amp;ldquo;&lt;a href="https://management.azure.com/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxxxxx/providers?api-version=2016-02-01%22:%22">https://management.azure.com/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxxxxx/providers?api-version=2016-02-01%22:&amp;quot;&lt;/a> dial tcp: lookup management.azure.com on 172.23.224.1:53: &lt;strong>cannot unmarshal DNS message&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2 id="the-cause">The cause&lt;/h2>
&lt;p>What was going on? Apparently, &lt;code>azurerm&lt;/code> (Terraform&amp;rsquo;s provider for Azure Resource Manager) tried to resolve the hostname &lt;code>management.azure.com&lt;/code> and was not happy with the response.&lt;/p>
&lt;p>After some excessive googling and GitHub-issue browsing, I finally hit gold: &lt;a href="https://github.com/golang/go/issues/51127#issue-1129393515">net: 512 byte DNS response size limit causes an error when making requests to Azure on WSL2 · Issue #51127 · golang/go (github.com)&lt;/a>&lt;/p>
&lt;p>The azurerm provider was written in Golang, and apparently, Golang&amp;rsquo;s net/dns resolver applies a strict 512-byte limit to the response buffer. If the response exceeds that limit, the resolver will not be able to &amp;ldquo;unmarshal the DNS message&amp;rdquo;.&lt;/p>
&lt;p>A quick &lt;code>dig&lt;/code> affirmed all suspicions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>❯ dig management.azure.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.1-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; management.azure.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; global options: +cmd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Got answer:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; -&amp;gt;&amp;gt;HEADER&lt;span style="color:#b44">&amp;lt;&amp;lt;- opco&lt;/span>de: QUERY, status: NOERROR, id: &lt;span style="color:#666">20748&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; flags: qr rd ad; QUERY: 1, ANSWER: 7, AUTHORITY: 0, ADDITIONAL: &lt;span style="color:#666">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; WARNING: recursion requested but not available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; QUESTION SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;management.azure.com. IN A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>management.azure.com. &lt;span style="color:#666">0&lt;/span> IN CNAME management.privatelink.azure.com.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>management.privatelink.azure.com. &lt;span style="color:#666">0&lt;/span> IN CNAME arm-frontdoor-prod.trafficmanager.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>arm-frontdoor-prod.trafficmanager.net. &lt;span style="color:#666">0&lt;/span> IN CNAME germanywestcentral.management.azure.com.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>germanywestcentral.management.azure.com. &lt;span style="color:#666">0&lt;/span> IN CNAME arm-frontdoor-germanywestcentral.trafficmanager.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>arm-frontdoor-germanywestcentral.trafficmanager.net. &lt;span style="color:#666">0&lt;/span> IN CNAME germanywestcentral.cs.management.azure.com.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>germanywestcentral.cs.management.azure.com. &lt;span style="color:#666">0&lt;/span> IN CNAME rpfd-germanywestcentral.cloudapp.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rpfd-germanywestcentral.cloudapp.net. &lt;span style="color:#666">0&lt;/span> IN A 51.116.156.32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Query time: &lt;span style="color:#666">40&lt;/span> msec
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; SERVER: 172.18.96.1#53&lt;span style="color:#666">(&lt;/span>172.18.96.1&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; WHEN: Thu Feb &lt;span style="color:#666">24&lt;/span> 21:09:39 CET &lt;span style="color:#666">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; MSG SIZE rcvd: &lt;span style="color:#666">632&lt;/span> 👈
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Indeed, the response size was 632 bytes. &lt;strong>But why did it work in the past?&lt;/strong> According to AaronFriel (see link above), Microsoft only recently added additional cnames to their management.azure.com endpoint, pushing the response size over the 512-byte limit.&lt;/p>
&lt;p>&lt;strong>Why is this happening only in WSL2?&lt;/strong> Per default, WSL2 uses the DNS configuration of the Hyper-V Virtual Network Adapter. This DNS server adds additional data to the ANSWER section of the response: &lt;a href="https://github.com/microsoft/WSL/issues/5806">DNS server mixes AUTHORITY/ADDITIONAL section into ANSWER section while responding to queries · Issue #5806 · microsoft/WSL (github.com)&lt;/a>&lt;/p>
&lt;h2 id="the-workaround">The workaround&lt;/h2>
&lt;p>What worked for me was forcing WSL2 to use an external DNS resolver like Google (&lt;code>8.8.8.8&lt;/code>) or UltraDNS (&lt;code>64.6.64.6&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>❯ dig management.azure.com @64.6.64.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.1-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; management.azure.com @64.6.64.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; global options: +cmd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Got answer:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; -&amp;gt;&amp;gt;HEADER&lt;span style="color:#b44">&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 2007
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">;; flags: qr rd ra; QUERY: 1, ANSWER: 7, AUTHORITY: 0, ADDITIONAL: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">;; OPT PSEUDOSECTION:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">; EDNS: version: 0, flags:; udp: 4096
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">;; QUESTION SECTION:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">;management.azure.com. IN A
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">management.azure.com. 424 IN CNAME management.privatelink.azure.com.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">management.privatelink.azure.com. 3002 IN CNAME arm-frontdoor-prod.trafficmanager.net.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b44">arm-frontdoor-prod.trafficmanager.net. 40 IN CNAME westeurop&lt;/span>e.management.azure.com.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>westeurope.management.azure.com. &lt;span style="color:#666">2516&lt;/span> IN CNAME arm-frontdoor-westeurope.trafficmanager.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>arm-frontdoor-westeurope.trafficmanager.net. &lt;span style="color:#666">40&lt;/span> IN CNAME westeurope.cs.management.azure.com.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>westeurope.cs.management.azure.com. &lt;span style="color:#666">742&lt;/span> IN CNAME rpfd-prod-am-01.cloudapp.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rpfd-prod-am-01.cloudapp.net. &lt;span style="color:#666">10&lt;/span> IN A 13.69.114.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Query time: &lt;span style="color:#666">40&lt;/span> msec
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; SERVER: 64.6.64.6#53&lt;span style="color:#666">(&lt;/span>64.6.64.6&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; WHEN: Thu Feb &lt;span style="color:#666">24&lt;/span> 21:30:11 CET &lt;span style="color:#666">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; MSG SIZE rcvd: &lt;span style="color:#666">284&lt;/span> 👈
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That brought the response down to a size the resolver in Golang could digest.&lt;/p>
&lt;p>The DNS server in WSL2 is configured in the &lt;code>/etc/resolv.conf&lt;/code>, which WSL2 generates on every boot. Changing anything here will not persist.&lt;/p>
&lt;p>You first need to tell WSL2 not to touch the file. Add the following to &lt;code>/etc/wsl.conf&lt;/code> (if the file does not exist, feel free to create it):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">[&lt;/span>network&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">generateResolvConf&lt;/span> &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#a2f">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now restart your WSL2 by typing &lt;code>wsl.exe --shutdown&lt;/code> in the cmd command prompt. After WSL2 has started again, remove the sad remains of &lt;code>/etc/resolv.conf&lt;/code> (it is a symlink now, that does not point anywhere anymore):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo rm /etc/resolv.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now add an external nameserver of your choice to the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a2f">echo&lt;/span> &lt;span style="color:#b44">&amp;#39;nameserver 64.6.64.6&amp;#39;&lt;/span> | sudo tee -a /etc/resolv.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And that&amp;rsquo;s it! After this change, terraform worked again in WSL2.&lt;/p></description></item><item><title>Use PowerShell to sort version strings</title><link>https://manualbashing.github.io/posts/sort-version-strings/</link><pubDate>Mon, 14 Feb 2022 12:50:28 +0100</pubDate><guid>https://manualbashing.github.io/posts/sort-version-strings/</guid><description>&lt;p>When sorting or comparing version numbers in PowerShell (to determine the latest version of a release, etc.), be careful not to work with plain version strings.&lt;/p>
&lt;p>PowerShell sorts strings in a lexical way, which means that it compares strings character by character to determine the sort order. This works well for words: &lt;code>fool&lt;/code> will come after &lt;code>foo&lt;/code> but before &lt;code>fox&lt;/code>. This does not work well for version strings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> &lt;span style="color:#b44">&amp;#39;1.0.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.50.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.5.339&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0&amp;#39;&lt;/span> | &lt;span style="color:#a2f">Sort-Object&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.5&lt;/span>.339
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.50&lt;/span>.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.0 &lt;span style="">👈&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">1.0&lt;/span>.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="use-the-version-type">Use the [version] type&lt;/h2>
&lt;p>In PowerShell version, strings can be cast to the &lt;code>version&lt;/code> type which does all the heavy lifting parsing version strings into objects:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> &lt;span style="color:#b44">&amp;#39;1.4.56&amp;#39;&lt;/span> &lt;span style="color:#666">-as&lt;/span> [&lt;span style="color:#800">version&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Major Minor Build Revision
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----- ----- ----- --------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">1&lt;/span> &lt;span style="color:#666">4&lt;/span> &lt;span style="color:#666">56&lt;/span> &lt;span style="color:#666">-1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The version type has its own comparsion logic already implemented:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> &lt;span style="color:#b44">&amp;#39;0.50.0&amp;#39;&lt;/span> &lt;span style="color:#666">-gt&lt;/span> &lt;span style="color:#b44">&amp;#39;0.6.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> [&lt;span style="color:#800">version&lt;/span>]&lt;span style="color:#b44">&amp;#39;0.50.0&amp;#39;&lt;/span> &lt;span style="color:#666">-gt&lt;/span> [&lt;span style="color:#800">version&lt;/span>]&lt;span style="color:#b44">&amp;#39;0.6.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we can use this for sorting:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> &lt;span style="color:#b44">&amp;#39;1.0.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.50.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.5.339&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0&amp;#39;&lt;/span> | &lt;span style="color:#a2f">Sort-Object&lt;/span> { &lt;span style="color:#b8860b">$_&lt;/span> &lt;span style="color:#666">-as&lt;/span> [&lt;span style="color:#800">version&lt;/span>] }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.5&lt;/span>.339
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.0 &lt;span style="">👈&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.50&lt;/span>.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">1.0&lt;/span>.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="sort-version-strings-with-postfix">Sort version strings with postfix&lt;/h2>
&lt;p>This method will not work if the version string has a postfix like &lt;code>-preview&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> &lt;span style="color:#b44">&amp;#39;1.0.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.50.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.5.339&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0-preview&amp;#39;&lt;/span> | &lt;span style="color:#a2f">Sort-Object&lt;/span> { &lt;span style="color:#b8860b">$_&lt;/span> &lt;span style="color:#666">-as&lt;/span> [&lt;span style="color:#800">version&lt;/span>] }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.&lt;span style="color:#666">0&lt;/span>-preview &lt;span style="">👈&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.5&lt;/span>.339
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.50&lt;/span>.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">1.0&lt;/span>.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This happens because the string &lt;code>0.6.0-preview&lt;/code> fails the cast to &lt;code>[version]&lt;/code>, so &lt;code>Sort-Object&lt;/code> has no idea what to do with it. (Depending on your PowerShell version the last command might cause an exception. In my version 7.2.1 it fails silently.)&lt;/p>
&lt;p>One way to work around this issue is to use a regex to strip the postfix from the version string before casting it to &lt;code>[version]&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> &lt;span style="color:#b44">&amp;#39;1.0.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.50.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.5.339&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0-preview&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0-lts&amp;#39;&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a2f">Sort-Object&lt;/span> { (&lt;span style="color:#b8860b">$_&lt;/span> &lt;span style="color:#666">-replace&lt;/span> &lt;span style="color:#b44">&amp;#39;-.+$&amp;#39;&lt;/span>) &lt;span style="color:#666">-as&lt;/span> [&lt;span style="color:#800">version&lt;/span>] }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.5&lt;/span>.339
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.&lt;span style="color:#666">0&lt;/span>-preview &lt;span style="">👈&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.&lt;span style="color:#666">0&lt;/span>-lts &lt;span style="">👈&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.50&lt;/span>.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">1.0&lt;/span>.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But here we see a new problem: there is no inner sort for the same version number with different postfixes. This happens in our example, because &lt;code>Sort-Object&lt;/code> never gets to see the postfix.&lt;/p>
&lt;p>Fortunately &lt;code>Sort-Object&lt;/code> allows us to specify an inner sort using a second scriptblock:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="">❯&lt;/span> &lt;span style="color:#b44">&amp;#39;1.0.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.50.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.5.339&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0-preview&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0&amp;#39;&lt;/span>, &lt;span style="color:#b44">&amp;#39;0.6.0-lts&amp;#39;&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a2f">Sort-Object&lt;/span> { (&lt;span style="color:#b8860b">$_&lt;/span> &lt;span style="color:#666">-replace&lt;/span> &lt;span style="color:#b44">&amp;#39;-.+$&amp;#39;&lt;/span>) &lt;span style="color:#666">-as&lt;/span> [&lt;span style="color:#800">version&lt;/span>] }, { &lt;span style="color:#b8860b">$_&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.5&lt;/span>.339
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.&lt;span style="color:#666">0&lt;/span>-lts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.6&lt;/span>.&lt;span style="color:#666">0&lt;/span>-preview
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">0.50&lt;/span>.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">1.0&lt;/span>.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to restore or purge a soft-deleted Azure API management service instance</title><link>https://manualbashing.github.io/posts/soft-deleted-apim/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>https://manualbashing.github.io/posts/soft-deleted-apim/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Edit 2023-02-17&lt;/strong>: The approach described below is not necessary anymore. Current versions of &lt;em>azure CLI&lt;/em> (f.e. 2.45.0+) provide commands to identify and remove soft deleted apim instances:&lt;/p>
&lt;ul>
&lt;li>List: &lt;code>az apim deletedservice list&lt;/code>&lt;/li>
&lt;li>Remove: &lt;code>az apim deletedservice purge --service-name &amp;quot;{name}&amp;quot; -l {location}&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>See here for more information: &lt;a href="https://learn.microsoft.com/en-us/cli/azure/apim/deletedservice?view=azure-cli-latest">az apim deletedservice&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Starting with REST API version, &lt;code>2020-06-01-preview&lt;/code> , Microsoft introduced the soft-delete feature to API Management service (APIM) (See: &lt;a href="https://docs.microsoft.com/en-us/azure/api-management/soft-delete">Azure API Management soft-delete (preview) | Microsoft Docs&lt;/a>)&lt;/p>
&lt;p>Deleting an APIM using the REST API version &lt;code>2020-06-01-preview&lt;/code> or higher will not obliterate the service but put it into the soft-delete state. It can be restored or purged (deleted forever) from this state. If nothing is done, the APIM will purge itself after a specific time.&lt;/p>
&lt;p>&lt;img src="https://manualbashing.github.io/static/apim-meme.jpg" alt="">&lt;/p>
&lt;p>No need to mention that this is a valuable feature, but it has downsides too, that have caused people headaches: &lt;a href="https://github.com/Azure/azure-cli/issues/16138">APIM gets stuck in soft-delete state · Issue #16138 · Azure/azure-cli (github.com)&lt;/a>&lt;/p>
&lt;p>As far as I see it, the problem lies in a combination of three factors:&lt;/p>
&lt;ol>
&lt;li>Once soft-deleted, the name of the APIM is still reserved, and attempts to deploy an APIM with the same name will fail.&lt;/li>
&lt;li>Functionality to manage soft-deleted APIM instances has not yet (10th of Feb. 2022) been added to neither azure CLI nor the Azure portal.&lt;/li>
&lt;li>Deleting an APIM from the Azure Portal by either deleting it directly or removing its resource group will put it into the soft-delete state.&lt;/li>
&lt;/ol>
&lt;p>So far, the only way to manage a soft-deleted APIM is the Azure REST API: &lt;a href="https://docs.microsoft.com/en-us/rest/api/apimanagement/current-ga/deleted-services">Deleted Services - REST API (Azure API Management) | Microsoft Docs&lt;/a>&lt;/p>
&lt;p>Fortunately, the Azure REST API can be called directly from the Azure CLI using the &lt;code>az rest&lt;/code> namespace: &lt;a href="https://docs.microsoft.com/en-us/cli/azure/reference-index?view=azure-cli-latest#az-rest">az | Microsoft Docs&lt;/a>&lt;/p>
&lt;p>Here are some examples of how to manage soft-deleted APIM instances using the Azure REST API with Azure CLI:&lt;/p>
&lt;h2 id="list-all-soft-deleted-instances">List all soft-deleted instances&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span>az account show --query id --output tsv&lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> az rest &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --method GET &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --header &lt;span style="color:#b44">&amp;#34;Accept=application/json&amp;#34;&lt;/span> &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --uri &lt;span style="color:#b44">&amp;#34;https://management.azure.com/subscriptions/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">/providers/Microsoft.ApiManagement/deletedservices?api-version=2021-08-01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Source: &lt;a href="https://docs.microsoft.com/en-us/rest/api/apimanagement/current-ga/deleted-services/list-by-subscription">Deleted Services - List By Subscription - REST API (Azure API Management) | Microsoft Docs&lt;/a>&lt;/p>
&lt;h2 id="restore-a-soft-deleted-instance">Restore a soft-deleted instance&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">apimName&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#b44">&amp;#34;{ name of the APIM instance that you want to restore }&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span>az account show --query id --output tsv&lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">location&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#b44">&amp;#34;{ location of the APIM} &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">resourceGroupName&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#b44">&amp;#34;{ name of the resource group where the APIM resides }&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>az rest &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --method PUT &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --header &lt;span style="color:#b44">&amp;#34;Accept=application/json&amp;#34;&lt;/span> &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --uri &lt;span style="color:#b44">&amp;#34;https://management.azure.com/subscriptions/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">/resourceGroups/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">resourceGroupName&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">/providers/Microsoft.ApiManagement/service/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">apimName&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">?api-version=2021-08-01&amp;#34;&lt;/span> &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --body &lt;span style="color:#b44">&amp;#34;{\&amp;#34;location\&amp;#34;:\&amp;#34;&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">location&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">\&amp;#34;,\&amp;#34;properties\&amp;#34;: {\&amp;#34;restore\&amp;#34; : true} }&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Source: &lt;a href="https://docs.microsoft.com/en-us/rest/api/apimanagement/current-ga/api-management-service/create-or-update">Api Management Service - Create Or Update - REST API (Azure API Management) | Microsoft Docs&lt;/a>&lt;/p>
&lt;h2 id="purge-a-soft-deleted-instance">Purge a soft-deleted instance&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">apimName&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#b44">&amp;#34;{ name of the APIM instance that you want to purge }&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span>az account show --query id --output tsv&lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">location&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#b44">&amp;#34;{ location where the APIM resides }&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;font-style:italic"># Here comes the actual call to the api to purge the APIM instance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>az rest &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --method DELETE &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --header &lt;span style="color:#b44">&amp;#34;Accept=application/json&amp;#34;&lt;/span> &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --uri &lt;span style="color:#b44">&amp;#34;https://management.azure.com/subscriptions/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">/providers/Microsoft.ApiManagement/locations/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">location&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">/deletedservices/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">apimName&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">?api-version=2021-08-01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Source: &lt;a href="https://docs.microsoft.com/en-us/azure/api-management/soft-delete#purge-a-soft-deleted-instance">Azure API Management soft-delete (preview) | Microsoft Docs&lt;/a>&lt;/p>
&lt;h2 id="derive-parameter-values-from-the-context">Derive parameter values from the context&lt;/h2>
&lt;p>Instead of setting all the required parameters manually, you can actually derive them from the context, if you specify the name of the APIM instance.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">apimName&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#b44">&amp;#34;{ name of the APIM instance }&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span>az account show --query id --output tsv&lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">apimObj&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span>az rest &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --method GET &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --header &lt;span style="color:#b44">&amp;#34;Accept=application/json&amp;#34;&lt;/span> &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --uri &lt;span style="color:#b44">&amp;#34;https://management.azure.com/subscriptions/&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">subscriptionId&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">/providers/Microsoft.ApiManagement/deletedservices?api-version=2021-08-01&amp;#34;&lt;/span> &lt;span style="color:#b62;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b62;font-weight:bold">&lt;/span> --query &lt;span style="color:#b44">&amp;#34;value[?name == &amp;#39;&lt;/span>&lt;span style="color:#b68;font-weight:bold">${&lt;/span>&lt;span style="color:#b8860b">apimName&lt;/span>&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#b44">&amp;#39;]&amp;#34;&lt;/span>&lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;font-style:italic"># location will be converted to lowercase without spaces&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">location&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span>&lt;span style="color:#a2f">echo&lt;/span> &lt;span style="color:#b8860b">$apimObj&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jq -r &lt;span style="color:#b44">&amp;#39;.[].location&amp;#39;&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sed -e &lt;span style="color:#b44">&amp;#39;s/./\L&amp;amp;/g&amp;#39;&lt;/span> -e &lt;span style="color:#b44">&amp;#39;s/ //g&amp;#39;&lt;/span>&lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b8860b">resourceGroupName&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#a2f;font-weight:bold">$(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a2f">echo&lt;/span> &lt;span style="color:#b8860b">$apimObj&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jq -r &lt;span style="color:#b44">&amp;#39;.[].properties.serviceId&amp;#39;&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sed -E &lt;span style="color:#b44">&amp;#39;s|.*resourceGroups/([^/]+).*|\1|g&amp;#39;&lt;/span>&lt;span style="color:#a2f;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>dotnet build would fail for an angular app if nodejs were installed using asdf</title><link>https://manualbashing.github.io/posts/dotnet-build-fails-for-angular-app-if-nodejs-was-installed-using-asdf/</link><pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate><guid>https://manualbashing.github.io/posts/dotnet-build-fails-for-angular-app-if-nodejs-was-installed-using-asdf/</guid><description>&lt;p>I was creating a new angular project using a template via &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/">dotnet cli&lt;/a> today:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet new angular
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Id did not have Node.js installed, so I installed it using &lt;a href="https://asdf-vm.com/">asdf&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>asdf plugin add nodejs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>asdf install nodejs latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This successfully installed Node.js &lt;code>v16.4.0&lt;/code>. But when I tried to build the example project using &lt;code>dotnet build&lt;/code>, I ran into the following error:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>❯ dotnet build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Microsoft &lt;span style="color:#666">(&lt;/span>R&lt;span style="color:#666">)&lt;/span> Build Engine version 16.7.2+b60ddb6f4 &lt;span style="color:#a2f;font-weight:bold">for&lt;/span> .NET
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copyright &lt;span style="color:#666">(&lt;/span>C&lt;span style="color:#666">)&lt;/span> Microsoft Corporation. All rights reserved.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Determining projects to restore...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> All projects are up-to-date &lt;span style="color:#a2f;font-weight:bold">for&lt;/span> restore.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foo -&amp;gt; /home/mbatsching/git/foo/bin/Debug/netcoreapp3.1/foo.dll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foo -&amp;gt; /home/mbatsching/git/foo/bin/Debug/netcoreapp3.1/foo.Views.dll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> No version &lt;span style="color:#a2f">set&lt;/span> &lt;span style="color:#a2f;font-weight:bold">for&lt;/span> &lt;span style="color:#a2f">command&lt;/span> node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Consider adding one of the following versions in your config file at
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodejs 16.4.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/home/mbatsching/git/foo/foo.csproj&lt;span style="color:#666">(&lt;/span>28,5&lt;span style="color:#666">)&lt;/span>: warning MSB3073: The &lt;span style="color:#a2f">command&lt;/span> &lt;span style="color:#b44">&amp;#34;node --version&amp;#34;&lt;/span> exited with code 126.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/home/mbatsching/git/foo/foo.csproj&lt;span style="color:#666">(&lt;/span>28,5&lt;span style="color:#666">)&lt;/span>: warning MSB4181: The &lt;span style="color:#b44">&amp;#34;Exec&amp;#34;&lt;/span> task returned &lt;span style="color:#a2f">false&lt;/span> but did not log an error.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/home/mbatsching/git/foo/foo.csproj&lt;span style="color:#666">(&lt;/span>31,5&lt;span style="color:#666">)&lt;/span>: error : Node.js is required to build and run this project. To &lt;span style="color:#a2f;font-weight:bold">continue&lt;/span>, please install Node.js from https://nodejs.org/, and &lt;span style="color:#a2f;font-weight:bold">then&lt;/span> restart your &lt;span style="color:#a2f">command&lt;/span> prompt or IDE.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>No version set for command &lt;code>node&lt;/code>?  That error is produced by the shim that asdf creates for the node executable. It needs to know which version of Node.js should be used in the current project.&lt;/p>
&lt;p>This can be done by creating a file named &lt;code>.tool-versions&lt;/code> in the project root and adding the Node.js version that should be used. In my case, the content of this file looked like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>nodejs 16.4.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After creating this file, the &lt;code>dotnet build&lt;/code> command was executed without issues.&lt;/p>
&lt;p>You can learn more about the &lt;code>.tool-versions&lt;/code> configuration file here: &lt;a href="https://asdf-vm.com/#/core-configuration?id=tool-versions">Configuration (asdf-vm.com)&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>🧐&lt;strong>And by the way&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=kcNpBNpvyc4&amp;amp;t=258s&amp;amp;ab_channel=TomSkaTomSkaVerified">asdf&lt;/a> is also the name of a legendary series of animated short films by TomSka.
&lt;img src="https://manualbashing.github.io/static/asdf.gif" alt="asdf pointless">&lt;/p>
&lt;/blockquote></description></item></channel></rss>